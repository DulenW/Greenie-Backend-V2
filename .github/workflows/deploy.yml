name: Deploy Spring Boot to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean install

      - name: Copy JAR to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem target/ProjectGreenie-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/

      - name: Run Spring Boot App on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
          # Check if the Spring Boot application is already running and kill it if necessary
          sudo pkill -f 'ProjectGreenie-0.0.1-SNAPSHOT.jar' || true
          
          # Ensure the jar has execute permission
          chmod +x /home/ubuntu/ProjectGreenie-0.0.1-SNAPSHOT.jar
          
          # Run the Spring Boot application in the background and log the output
          nohup java -jar /home/ubuntu/ProjectGreenie-0.0.1-SNAPSHOT.jar > /home/ubuntu/log.txt 2>&1 &
          
          # Optionally, check if the application is running after starting it
          ps aux | grep 'ProjectGreenie-0.0.1-SNAPSHOT.jar' || echo "App did not start successfully"
          EOF

      - name: Clean up private key
        run: rm -f private_key.pem